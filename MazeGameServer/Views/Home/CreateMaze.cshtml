@model Maze
@{
    ViewData["Title"] = "CreateMaze";
    var maze = Model;
}

<h2>CreateMaze</h2>

@*<p>@maze.Template.MazeTemplateCompressed</p>*@

<br />

@maze.Template.MazeDifficulty : @maze.Template.BestPath

<br /><br />
@{
    var dirs = maze.Template.BestPath.ToArray();
    for (int i = 0; i < dirs.Length; i++)
    {
        switch (dirs[i].ToString())
        {
            case "N":
                <span>goNorth();</span>
                break;
            case "S":
                <span>goSouth();</span>
                break;
            case "E":
                <span>goEast();</span>
                break;
            case "W":
                <span>goWest();</span>
                break;
            case "U":
                <span>goUp();</span>
                break;
            case "D":
                <span>goDown();</span>
                break;
        }
    }
}
                <br /><br />
<br />
[@(maze.Template.StartLocation.Z)][@(maze.Template.StartLocation.Y)][@(maze.Template.StartLocation.X)]
>
[@(maze.Template.EndLocation.Z)][@(maze.Template.EndLocation.Y)][@(maze.Template.EndLocation.X)]